//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Thu Sep 25 12:07:45 2014 by ROOT version 5.32/00)
//      from the StreamerInfo in file total_nuTuple.root
//////////////////////////////////////////////////////////


#ifndef TCEGamma_h
#define TCEGamma_h
class TCEGamma;

#include "TCPhysObject.h"
#include "Riostream.h"
#include <vector>
#include "TCEGamma.h"

class TCEGamma : public TCPhysObject {

public:
// Nested classes forward declaration.
class CrystalInfo;

public:
// Nested classes declaration.
class CrystalInfo {

public:
// Nested classes declaration.

public:
// Data Members.
   int         rawId;       //
   int         ieta;        //
   int         iphi;        //
   double      energy;      //
   double      time;        //
   double      timeErr;     //
   int         recoFlag;    //

   CrystalInfo();
   CrystalInfo(const CrystalInfo & );
   virtual ~CrystalInfo();

};

public:
// Data Members.
   bool        _isEB;       //true if particle is in ECAL Barrel
   bool        _isEE;       //true if particle is in ECAL Endcaps
   bool        _isInGap;    //
   float       _hadOverEm;    //
   float       _r9;           //
   float       _scEta;        //
   float       _scPhi;        //
   float       _scDeltaPhi;    //
   float       _scDeltaEta;    //
   float       _scSigmaIetaIeta;    //
   float       _scSigmaIetaIphi;    //
   float       _scSigmaIphiIphi;    //
   float       _scEtaWidth;         //
   float       _scPhiWidth;         //
   float       _scRawEnergy;        //
   float       _scEnergy;           //
   float       _scPSEnergy;         //
   float       _preShowerOverRaw;    //
   float       _e1x3;                //
   float       _e1x5;                //
   float       _e2x2;                //
   float       _e2x5;                //
   float       _e2x5Max;             //
   float       _e5x5;                //
   vector<float> _esEffSigmaRR;        //
   float         _pfIsoCharged;        //
   float         _pfIsoNeutral;        //
   float         _pfIsoPhoton;         //
   vector<TCEGamma::CrystalInfo> _crysVect;            //
   int                           _nCrystals;           //

   TCEGamma();
   TCEGamma(const TCEGamma & );
   virtual ~TCEGamma();

   ClassDef(TCEGamma,2); // Generated by MakeProject.
};
#endif
